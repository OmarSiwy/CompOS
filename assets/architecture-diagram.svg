<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1400 900">
  <defs>
    <style>
      .title { font: bold 36px 'Arial', sans-serif; fill: #1a1a1a; }
      .subtitle { font: bold 22px 'Arial', sans-serif; fill: #444; }
      .section-title { font: bold 18px 'Arial', sans-serif; fill: #fff; }
      .box-title { font: bold 15px 'Arial', sans-serif; fill: #fff; }
      .text { font: 13px 'Arial', sans-serif; fill: #2c3e50; }
      .small-text { font: 11px 'Arial', sans-serif; fill: #666; }
      .benefit-text { font: bold 15px 'Arial', sans-serif; fill: #fff; }

      /* Gradients */
      .gradient-orange { fill: url(#orangeGradient); }
      .gradient-green { fill: url(#greenGradient); }
      .gradient-blue { fill: url(#blueGradient); }
      .gradient-purple { fill: url(#purpleGradient); }
      .gradient-red { fill: url(#redGradient); }
      .gradient-teal { fill: url(#tealGradient); }

      .box-light { fill: #f8f9fa; stroke: #dee2e6; stroke-width: 1.5; }
      .arrow { fill: none; stroke: #34495e; stroke-width: 2.5; marker-end: url(#arrowhead); }
      .arrow-dash { fill: none; stroke: #e67e22; stroke-width: 3; stroke-dasharray: 8,4; }

      .shadow { filter: drop-shadow(0 2px 4px rgba(0,0,0,0.15)); }
    </style>

    <!-- Gradients -->
    <linearGradient id="orangeGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#ff9a3c;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#ff6b35;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="greenGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#4ecdc4;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#44a08d;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="blueGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#667eea;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#4c63d2;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="purpleGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#a8519e;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#7b3a9d;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="redGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#f093fb;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#f5576c;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="tealGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#00d2ff;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#3a7bd5;stop-opacity:1" />
    </linearGradient>

    <marker id="arrowhead" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <polygon points="0 0, 10 3, 0 6" fill="#34495e" />
    </marker>
  </defs>

  <!-- Background -->
  <rect width="1400" height="900" fill="#ffffff"/>

  <!-- Title -->
  <text x="700" y="50" text-anchor="middle" class="title">CompOS Architecture</text>
  <text x="700" y="82" text-anchor="middle" class="subtitle">Compile-Time Optimized Real-Time Operating System</text>
  <line x1="400" y1="95" x2="1000" y2="95" stroke="#e0e0e0" stroke-width="2"/>

  <!-- ==================== TOP LAYER ==================== -->

  <!-- Compile-Time Layer Container -->
  <rect x="80" y="120" width="580" height="160" rx="12" fill="#fff5e6" stroke="#ff9a3c" stroke-width="2" class="shadow"/>
  <text x="370" y="148" text-anchor="middle" class="section-title" fill="#e67e22">âš¡ COMPILE-TIME LAYER</text>

  <!-- Zig Comptime -->
  <rect x="110" y="165" width="240" height="95" rx="8" class="gradient-orange shadow"/>
  <text x="230" y="190" text-anchor="middle" class="box-title">Zig Comptime</text>
  <text x="230" y="210" text-anchor="middle" class="small-text" fill="#fff">â€¢ Task Structure Analysis</text>
  <text x="230" y="228" text-anchor="middle" class="small-text" fill="#fff">â€¢ Memory Layout Optimization</text>
  <text x="230" y="246" text-anchor="middle" class="small-text" fill="#fff">â€¢ Compile-Time Execution</text>

  <!-- Static Allocation -->
  <rect x="380" y="165" width="240" height="95" rx="8" class="gradient-orange shadow"/>
  <text x="500" y="190" text-anchor="middle" class="box-title">Static Allocation</text>
  <text x="500" y="210" text-anchor="middle" class="small-text" fill="#fff">â€¢ Zero Runtime Overhead</text>
  <text x="500" y="228" text-anchor="middle" class="small-text" fill="#fff">â€¢ Fixed Memory Footprint</text>
  <text x="500" y="246" text-anchor="middle" class="small-text" fill="#fff">â€¢ Predictable Performance</text>

  <!-- Runtime Layer Container -->
  <rect x="740" y="120" width="580" height="160" rx="12" fill="#e6f9f7" stroke="#44a08d" stroke-width="2" class="shadow"/>
  <text x="1030" y="148" text-anchor="middle" class="section-title" fill="#27ae60">âš¡ RUNTIME LAYER</text>

  <!-- Task Scheduler -->
  <rect x="770" y="165" width="240" height="95" rx="8" class="gradient-green shadow"/>
  <text x="890" y="190" text-anchor="middle" class="box-title">Task Scheduler</text>
  <text x="890" y="210" text-anchor="middle" class="small-text" fill="#fff">â€¢ Ultra-Low Latency</text>
  <text x="890" y="228" text-anchor="middle" class="small-text" fill="#fff">â€¢ Cooperative Scheduling</text>
  <text x="890" y="246" text-anchor="middle" class="small-text" fill="#fff">â€¢ Priority-Based Execution</text>

  <!-- State Machines -->
  <rect x="1040" y="165" width="240" height="95" rx="8" class="gradient-green shadow"/>
  <text x="1160" y="190" text-anchor="middle" class="box-title">State Machines</text>
  <text x="1160" y="210" text-anchor="middle" class="small-text" fill="#fff">â€¢ No Stack Overhead</text>
  <text x="1160" y="228" text-anchor="middle" class="small-text" fill="#fff">â€¢ Minimal Context Switch</text>
  <text x="1160" y="246" text-anchor="middle" class="small-text" fill="#fff">â€¢ Efficient Task States</text>

  <!-- Compile-Time Optimization Flow Arrow -->
  <path d="M 370 300 L 1030 300" class="arrow-dash"/>
  <text x="700" y="292" text-anchor="middle" class="small-text" fill="#e67e22" font-weight="bold">â–¼ Compile-Time Optimization Flow â–¼</text>

  <!-- ==================== MIDDLE LAYER - CORE COMPONENTS ==================== -->

  <text x="700" y="345" text-anchor="middle" class="subtitle">Core System Components</text>

  <!-- CPU Virtualization -->
  <rect x="80" y="370" width="260" height="200" rx="10" class="gradient-blue shadow"/>
  <text x="210" y="398" text-anchor="middle" class="section-title">CPU Virtualization</text>
  <rect x="100" y="415" width="220" height="42" rx="6" class="box-light"/>
  <text x="210" y="441" text-anchor="middle" class="text">Task Management</text>
  <rect x="100" y="467" width="220" height="42" rx="6" class="box-light"/>
  <text x="210" y="493" text-anchor="middle" class="text">Scheduling Algorithms</text>
  <rect x="100" y="519" width="220" height="42" rx="6" class="box-light"/>
  <text x="210" y="545" text-anchor="middle" class="text">Concurrency Control</text>

  <!-- Memory Management -->
  <rect x="370" y="370" width="260" height="200" rx="10" class="gradient-purple shadow"/>
  <text x="500" y="398" text-anchor="middle" class="section-title">Memory Management</text>
  <rect x="390" y="415" width="220" height="42" rx="6" class="box-light"/>
  <text x="500" y="441" text-anchor="middle" class="text">Zig Heap Allocator</text>
  <rect x="390" y="467" width="220" height="42" rx="6" class="box-light"/>
  <text x="500" y="493" text-anchor="middle" class="text">List-Based Heap</text>
  <rect x="390" y="519" width="220" height="42" rx="6" class="box-light"/>
  <text x="500" y="545" text-anchor="middle" class="text">Memory Optimization</text>

  <!-- Persistence -->
  <rect x="660" y="370" width="260" height="200" rx="10" class="gradient-teal shadow"/>
  <text x="790" y="398" text-anchor="middle" class="section-title">Persistence Layer</text>
  <rect x="680" y="440" width="220" height="100" rx="6" class="box-light"/>
  <text x="790" y="480" text-anchor="middle" class="text">Data Persistence</text>
  <text x="790" y="505" text-anchor="middle" class="small-text">(Future Implementation)</text>

  <!-- Language Support / C ABI -->
  <rect x="950" y="370" width="370" height="200" rx="10" class="gradient-red shadow"/>
  <text x="1135" y="398" text-anchor="middle" class="section-title">Language Support</text>
  <rect x="975" y="420" width="160" height="70" rx="6" class="box-light"/>
  <text x="1055" y="445" text-anchor="middle" class="text" font-weight="bold">Zig API</text>
  <text x="1055" y="463" text-anchor="middle" class="small-text">Native Interface</text>
  <text x="1055" y="478" text-anchor="middle" class="small-text">Type Safety</text>
  <rect x="1150" y="420" width="160" height="70" rx="6" class="box-light"/>
  <text x="1230" y="445" text-anchor="middle" class="text" font-weight="bold">C/C++ API</text>
  <text x="1230" y="463" text-anchor="middle" class="small-text">ABI Compatible</text>
  <text x="1230" y="478" text-anchor="middle" class="small-text">Cross-Platform</text>
  <rect x="975" y="505" width="335" height="50" rx="6" class="box-light"/>
  <text x="1142" y="535" text-anchor="middle" class="text">ðŸ”— Cross-Language Integration</text>

  <!-- Arrows from top to core components -->
  <path d="M 370 280 L 210 370" class="arrow"/>
  <path d="M 500 280 L 500 370" class="arrow"/>
  <path d="M 890 280 L 790 370" class="arrow"/>
  <path d="M 1030 280 L 1135 370" class="arrow"/>

  <!-- ==================== BOTTOM LAYER - BUILD TOOLS ==================== -->

  <rect x="80" y="610" width="1240" height="180" rx="10" fill="#f8f9fa" stroke="#adb5bd" stroke-width="2" class="shadow"/>
  <text x="700" y="640" text-anchor="middle" class="subtitle">Build & Development Ecosystem</text>

  <!-- Zig Build System -->
  <rect x="110" y="660" width="210" height="105" rx="8" class="gradient-blue shadow"/>
  <text x="215" y="685" text-anchor="middle" class="box-title">Zig Build System</text>
  <text x="215" y="705" text-anchor="middle" class="small-text" fill="#fff">â€¢ Cross-Compilation</text>
  <text x="215" y="723" text-anchor="middle" class="small-text" fill="#fff">â€¢ Target Configuration</text>
  <text x="215" y="741" text-anchor="middle" class="small-text" fill="#fff">â€¢ Dependency Management</text>

  <!-- Unit Testing -->
  <rect x="345" y="660" width="210" height="105" rx="8" class="gradient-blue shadow"/>
  <text x="450" y="685" text-anchor="middle" class="box-title">Unit Testing</text>
  <text x="450" y="705" text-anchor="middle" class="small-text" fill="#fff">â€¢ Native Zig Tests</text>
  <text x="450" y="723" text-anchor="middle" class="small-text" fill="#fff">â€¢ Heap Testing</text>
  <text x="450" y="741" text-anchor="middle" class="small-text" fill="#fff">â€¢ CI/CD Integration</text>

  <!-- Docker -->
  <rect x="580" y="660" width="210" height="105" rx="8" class="gradient-teal shadow"/>
  <text x="685" y="685" text-anchor="middle" class="box-title">Docker Support</text>
  <text x="685" y="705" text-anchor="middle" class="small-text" fill="#fff">â€¢ Containerized Build</text>
  <text x="685" y="723" text-anchor="middle" class="small-text" fill="#fff">â€¢ Reproducible Builds</text>
  <text x="685" y="741" text-anchor="middle" class="small-text" fill="#fff">â€¢ CI/CD Pipeline</text>

  <!-- Examples -->
  <rect x="815" y="660" width="210" height="105" rx="8" class="gradient-green shadow"/>
  <text x="920" y="685" text-anchor="middle" class="box-title">Code Examples</text>
  <text x="920" y="705" text-anchor="middle" class="small-text" fill="#fff">â€¢ Zig Integration</text>
  <text x="920" y="723" text-anchor="middle" class="small-text" fill="#fff">â€¢ C/C++ Integration</text>
  <text x="920" y="741" text-anchor="middle" class="small-text" fill="#fff">â€¢ Getting Started</text>

  <!-- Linker Tools -->
  <rect x="1050" y="660" width="210" height="105" rx="8" class="gradient-purple shadow"/>
  <text x="1155" y="685" text-anchor="middle" class="box-title">Linker Tools</text>
  <text x="1155" y="705" text-anchor="middle" class="small-text" fill="#fff">â€¢ Script Generation</text>
  <text x="1155" y="723" text-anchor="middle" class="small-text" fill="#fff">â€¢ MCU Support</text>
  <text x="1155" y="741" text-anchor="middle" class="small-text" fill="#fff">â€¢ Memory Mapping</text>

  <!-- ==================== KEY BENEFITS FOOTER ==================== -->

  <rect x="80" y="820" width="1240" height="60" rx="8" fill="#2c3e50" class="shadow"/>
  <text x="150" y="848" class="benefit-text">âœ“ Zero Runtime</text>
  <text x="150" y="865" class="benefit-text">Allocation</text>

  <text x="420" y="848" class="benefit-text">âœ“ Ultra-Low</text>
  <text x="420" y="865" class="benefit-text">Context Switch</text>

  <text x="690" y="848" class="benefit-text">âœ“ Minimal Memory</text>
  <text x="690" y="865" class="benefit-text">Footprint</text>

  <text x="960" y="848" class="benefit-text">âœ“ C ABI</text>
  <text x="960" y="865" class="benefit-text">Compatible</text>

  <text x="1180" y="848" class="benefit-text">âœ“ Production</text>
  <text x="1180" y="865" class="benefit-text">Ready</text>

  <!-- Dividers in footer -->
  <line x1="310" y1="835" x2="310" y2="865" stroke="#fff" stroke-width="1" opacity="0.3"/>
  <line x1="580" y1="835" x2="580" y2="865" stroke="#fff" stroke-width="1" opacity="0.3"/>
  <line x1="850" y1="835" x2="850" y2="865" stroke="#fff" stroke-width="1" opacity="0.3"/>
  <line x1="1120" y1="835" x2="1120" y2="865" stroke="#fff" stroke-width="1" opacity="0.3"/>
</svg>